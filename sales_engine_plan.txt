class Camry
  include HasEngine
  def drive
  puts "rear go"
  end
  end

module HasEngine
methods here
end
when include module, methods become a part of module


____SALES ENGINE____

if foreign key, it belongs to that key(customer)

Sales engine is top level
second level is repositories
third level is the instance of items
An instance needs to know its repository in order to travel upwards
      have an instance variable with the instance of merchant repo
      merchant repo needs to have access to sales Engine


Individual instances (merchant, item, etc)

example =
#this is assuming that one row at a time is being passed to item
  class Item
  #data is a hash
  attr_reader for all of them
    def initialize(data, repo)
    @id = data[:id]
    @name = data[:name]
    @repo = repo
    etc
    end

    end

  class ItemRepo
    def method_name
     rows.map do |row|
     item.new(row, self)
#self will refer to the instance
     end
    end

    class SalesEnginer

    def method
    @ itemrepo = ItemRepo.new(rows, self)
